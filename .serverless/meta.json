{
  "D:\\NodeProjects\\lambdaMultiHandler": {
    "versionSfCore": null,
    "versionFramework": "4.1.5",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "opt": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "lambda",
            "frameworkVersion": "4.1.0",
            "provider": {
              "name": "aws",
              "runtime": "nodejs18.x",
              "memorySize": 2048,
              "timeout": 20,
              "region": "ap-south-1",
              "stage": "dev",
              "httpApi": {
                "cors": true
              },
              "environment": {
                "ENV_VARS_FROM_FILE": {
                  "ENVIORMENT": "development",
                  "PORT": 8000,
                  "MONGOURI": "mongodb://enviro_root:Enviro122Agl@3.111.24.156:27017/enviro_agl?authSource=admin&readPreference=primary&appname=MongoDB%20Compass&directConnection=true&ssl=false",
                  "MONGOURI1": "mongodb://enviro_root:Enviro122Agl@3.111.24.156:27017/enviro_agl?authSource=admin&readPreference=primary&appname=MongoDB%20Compass&directConnection=true&ssl=false",
                  "dbName": "agl",
                  "dbName1": "hakuhodo",
                  "JWT_SECRET_KEY": "<REDACTED>"
                },
                "ENVIORMENT": "development",
                "PORT": "8000",
                "MONGOURI": "mongodb://enviro_root:Enviro122Agl@3.111.24.156:27017/enviro_agl?authSource=admin&readPreference=primary&appname=MongoDB%20Compass&directConnection=true&ssl=false"
              },
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "HelloLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/hello"
                    }
                  },
                  "GetUsersLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/getUsers"
                    }
                  },
                  "LoginLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/login"
                    }
                  },
                  "SecretManagerLogGroup": "<REDACTED>",
                  "CalculatorLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/calculator"
                    }
                  },
                  "SendMessageLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/lambda-dev-sendMessage"
                    }
                  },
                  "ReceiveMessageLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/lambda-dev-receiveMessage"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "lambda",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/hello:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/getUsers:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/login:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/secretManager:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/calculator:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/lambda-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/hello:*:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/getUsers:*:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/login:*:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/secretManager:*:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/calculator:*:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/lambda-dev*:*:*"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "lambda",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    }
                  }
                }
              },
              "coreCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    }
                  }
                }
              }
            },
            "plugins": [
              "serverless-offline",
              "serverless-dotenv-plugin",
              "serverless-middleware"
            ],
            "functions": {
              "hello": {
                "name": "hello",
                "handler": "src/handlers/handler.hello",
                "events": [
                  {
                    "http": {
                      "path": "/hello",
                      "method": "get"
                    }
                  }
                ],
                "package": {}
              },
              "getUsers": {
                "name": "getUsers",
                "handler": "src/handlers/hr.hrHandler.users",
                "events": [
                  {
                    "http": {
                      "path": "/users",
                      "method": "post"
                    }
                  }
                ],
                "package": {}
              },
              "login": {
                "name": "login",
                "handler": "src/handlers/hr.hrHandler.login",
                "events": [
                  {
                    "http": {
                      "path": "/login",
                      "method": "post"
                    }
                  }
                ],
                "package": {}
              },
              "secretManager": "<REDACTED>",
              "calculator": {
                "name": "calculator",
                "handler": "src/handlers/calculator.calculator",
                "events": [
                  {
                    "http": {
                      "path": "/calculator",
                      "method": "post"
                    }
                  }
                ],
                "package": {}
              },
              "sendMessage": {
                "handler": "src/handlers/queuehandler.sendMessage",
                "events": [
                  {
                    "http": {
                      "path": "/send",
                      "method": "post"
                    }
                  }
                ],
                "name": "lambda-dev-sendMessage",
                "package": {}
              },
              "receiveMessage": {
                "handler": "src/handlers/queuehandler.receiveMessage",
                "events": [
                  {
                    "sqs": {
                      "arn": {
                        "Fn::GetAtt": [
                          "MyQueue",
                          "Arn"
                        ]
                      }
                    }
                  }
                ],
                "name": "lambda-dev-receiveMessage",
                "package": {}
              }
            },
            "resources": {
              "Resources": {
                "MyQueue": {
                  "Type": "AWS::SQS::Queue",
                  "Properties": {
                    "QueueName": "MyQueue"
                  }
                }
              }
            },
            "outputs": {
              "queueUrl": {
                "Description": "URL of the SQS queue",
                "Value": {
                  "Ref": "MyQueue"
                }
              }
            }
          },
          "configFileDirPath": "D:\\NodeProjects\\lambdaMultiHandler",
          "config": {
            "type": "opt"
          },
          "options": {}
        },
        "resolvers": {}
      },
      "file": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "lambda",
            "frameworkVersion": "4.1.0",
            "provider": {
              "name": "aws",
              "runtime": "nodejs18.x",
              "memorySize": 2048,
              "timeout": 20,
              "region": "ap-south-1",
              "stage": "dev",
              "httpApi": {
                "cors": true
              },
              "environment": {
                "ENV_VARS_FROM_FILE": {
                  "ENVIORMENT": "development",
                  "PORT": 8000,
                  "MONGOURI": "mongodb://enviro_root:Enviro122Agl@3.111.24.156:27017/enviro_agl?authSource=admin&readPreference=primary&appname=MongoDB%20Compass&directConnection=true&ssl=false",
                  "MONGOURI1": "mongodb://enviro_root:Enviro122Agl@3.111.24.156:27017/enviro_agl?authSource=admin&readPreference=primary&appname=MongoDB%20Compass&directConnection=true&ssl=false",
                  "dbName": "agl",
                  "dbName1": "hakuhodo",
                  "JWT_SECRET_KEY": "<REDACTED>"
                },
                "ENVIORMENT": "development",
                "PORT": "8000",
                "MONGOURI": "mongodb://enviro_root:Enviro122Agl@3.111.24.156:27017/enviro_agl?authSource=admin&readPreference=primary&appname=MongoDB%20Compass&directConnection=true&ssl=false"
              },
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "HelloLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/hello"
                    }
                  },
                  "GetUsersLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/getUsers"
                    }
                  },
                  "LoginLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/login"
                    }
                  },
                  "SecretManagerLogGroup": "<REDACTED>",
                  "CalculatorLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/calculator"
                    }
                  },
                  "SendMessageLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/lambda-dev-sendMessage"
                    }
                  },
                  "ReceiveMessageLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/lambda-dev-receiveMessage"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "lambda",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/hello:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/getUsers:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/login:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/secretManager:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/calculator:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/lambda-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/hello:*:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/getUsers:*:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/login:*:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/secretManager:*:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/calculator:*:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/lambda-dev*:*:*"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "lambda",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    }
                  }
                }
              },
              "coreCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    }
                  }
                }
              }
            },
            "plugins": [
              "serverless-offline",
              "serverless-dotenv-plugin",
              "serverless-middleware"
            ],
            "functions": {
              "hello": {
                "name": "hello",
                "handler": "src/handlers/handler.hello",
                "events": [
                  {
                    "http": {
                      "path": "/hello",
                      "method": "get"
                    }
                  }
                ],
                "package": {}
              },
              "getUsers": {
                "name": "getUsers",
                "handler": "src/handlers/hr.hrHandler.users",
                "events": [
                  {
                    "http": {
                      "path": "/users",
                      "method": "post"
                    }
                  }
                ],
                "package": {}
              },
              "login": {
                "name": "login",
                "handler": "src/handlers/hr.hrHandler.login",
                "events": [
                  {
                    "http": {
                      "path": "/login",
                      "method": "post"
                    }
                  }
                ],
                "package": {}
              },
              "secretManager": "<REDACTED>",
              "calculator": {
                "name": "calculator",
                "handler": "src/handlers/calculator.calculator",
                "events": [
                  {
                    "http": {
                      "path": "/calculator",
                      "method": "post"
                    }
                  }
                ],
                "package": {}
              },
              "sendMessage": {
                "handler": "src/handlers/queuehandler.sendMessage",
                "events": [
                  {
                    "http": {
                      "path": "/send",
                      "method": "post"
                    }
                  }
                ],
                "name": "lambda-dev-sendMessage",
                "package": {}
              },
              "receiveMessage": {
                "handler": "src/handlers/queuehandler.receiveMessage",
                "events": [
                  {
                    "sqs": {
                      "arn": {
                        "Fn::GetAtt": [
                          "MyQueue",
                          "Arn"
                        ]
                      }
                    }
                  }
                ],
                "name": "lambda-dev-receiveMessage",
                "package": {}
              }
            },
            "resources": {
              "Resources": {
                "MyQueue": {
                  "Type": "AWS::SQS::Queue",
                  "Properties": {
                    "QueueName": "MyQueue"
                  }
                }
              }
            },
            "outputs": {
              "queueUrl": {
                "Description": "URL of the SQS queue",
                "Value": {
                  "Ref": "MyQueue"
                }
              }
            }
          },
          "configFileDirPath": "D:\\NodeProjects\\lambdaMultiHandler",
          "config": {
            "type": "file"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null
        },
        "resolvers": {}
      },
      "self": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "lambda",
            "frameworkVersion": "4.1.0",
            "provider": {
              "name": "aws",
              "runtime": "nodejs18.x",
              "memorySize": 2048,
              "timeout": 20,
              "region": "ap-south-1",
              "stage": "dev",
              "httpApi": {
                "cors": true
              },
              "environment": {
                "ENV_VARS_FROM_FILE": {
                  "ENVIORMENT": "development",
                  "PORT": 8000,
                  "MONGOURI": "mongodb://enviro_root:Enviro122Agl@3.111.24.156:27017/enviro_agl?authSource=admin&readPreference=primary&appname=MongoDB%20Compass&directConnection=true&ssl=false",
                  "MONGOURI1": "mongodb://enviro_root:Enviro122Agl@3.111.24.156:27017/enviro_agl?authSource=admin&readPreference=primary&appname=MongoDB%20Compass&directConnection=true&ssl=false",
                  "dbName": "agl",
                  "dbName1": "hakuhodo",
                  "JWT_SECRET_KEY": "<REDACTED>"
                },
                "ENVIORMENT": "development",
                "PORT": "8000",
                "MONGOURI": "mongodb://enviro_root:Enviro122Agl@3.111.24.156:27017/enviro_agl?authSource=admin&readPreference=primary&appname=MongoDB%20Compass&directConnection=true&ssl=false"
              },
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "HelloLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/hello"
                    }
                  },
                  "GetUsersLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/getUsers"
                    }
                  },
                  "LoginLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/login"
                    }
                  },
                  "SecretManagerLogGroup": "<REDACTED>",
                  "CalculatorLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/calculator"
                    }
                  },
                  "SendMessageLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/lambda-dev-sendMessage"
                    }
                  },
                  "ReceiveMessageLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/lambda-dev-receiveMessage"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "lambda",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/hello:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/getUsers:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/login:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/secretManager:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/calculator:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/lambda-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/hello:*:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/getUsers:*:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/login:*:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/secretManager:*:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/calculator:*:*"
                                  },
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/lambda-dev*:*:*"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "lambda",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    }
                  }
                }
              },
              "coreCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    }
                  }
                }
              }
            },
            "plugins": [
              "serverless-offline",
              "serverless-dotenv-plugin",
              "serverless-middleware"
            ],
            "functions": {
              "hello": {
                "name": "hello",
                "handler": "src/handlers/handler.hello",
                "events": [
                  {
                    "http": {
                      "path": "/hello",
                      "method": "get"
                    }
                  }
                ],
                "package": {}
              },
              "getUsers": {
                "name": "getUsers",
                "handler": "src/handlers/hr.hrHandler.users",
                "events": [
                  {
                    "http": {
                      "path": "/users",
                      "method": "post"
                    }
                  }
                ],
                "package": {}
              },
              "login": {
                "name": "login",
                "handler": "src/handlers/hr.hrHandler.login",
                "events": [
                  {
                    "http": {
                      "path": "/login",
                      "method": "post"
                    }
                  }
                ],
                "package": {}
              },
              "secretManager": "<REDACTED>",
              "calculator": {
                "name": "calculator",
                "handler": "src/handlers/calculator.calculator",
                "events": [
                  {
                    "http": {
                      "path": "/calculator",
                      "method": "post"
                    }
                  }
                ],
                "package": {}
              },
              "sendMessage": {
                "handler": "src/handlers/queuehandler.sendMessage",
                "events": [
                  {
                    "http": {
                      "path": "/send",
                      "method": "post"
                    }
                  }
                ],
                "name": "lambda-dev-sendMessage",
                "package": {}
              },
              "receiveMessage": {
                "handler": "src/handlers/queuehandler.receiveMessage",
                "events": [
                  {
                    "sqs": {
                      "arn": {
                        "Fn::GetAtt": [
                          "MyQueue",
                          "Arn"
                        ]
                      }
                    }
                  }
                ],
                "name": "lambda-dev-receiveMessage",
                "package": {}
              }
            },
            "resources": {
              "Resources": {
                "MyQueue": {
                  "Type": "AWS::SQS::Queue",
                  "Properties": {
                    "QueueName": "MyQueue"
                  }
                }
              }
            },
            "outputs": {
              "queueUrl": {
                "Description": "URL of the SQS queue",
                "Value": {
                  "Ref": "MyQueue"
                }
              }
            }
          },
          "configFileDirPath": "D:\\NodeProjects\\lambdaMultiHandler",
          "config": {
            "type": "self"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "D:\\NodeProjects\\lambdaMultiHandler",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "lambda",
      "frameworkVersion": "4.1.0",
      "provider": {
        "name": "aws",
        "runtime": "nodejs18.x",
        "memorySize": 2048,
        "timeout": 20,
        "region": "ap-south-1",
        "stage": "dev",
        "httpApi": {
          "cors": true
        },
        "environment": {
          "ENV_VARS_FROM_FILE": {
            "ENVIORMENT": "development",
            "PORT": 8000,
            "MONGOURI": "mongodb://enviro_root:Enviro122Agl@3.111.24.156:27017/enviro_agl?authSource=admin&readPreference=primary&appname=MongoDB%20Compass&directConnection=true&ssl=false",
            "MONGOURI1": "mongodb://enviro_root:Enviro122Agl@3.111.24.156:27017/enviro_agl?authSource=admin&readPreference=primary&appname=MongoDB%20Compass&directConnection=true&ssl=false",
            "dbName": "agl",
            "dbName1": "hakuhodo",
            "JWT_SECRET_KEY": "<REDACTED>"
          },
          "ENVIORMENT": "development",
          "PORT": "8000",
          "MONGOURI": "mongodb://enviro_root:Enviro122Agl@3.111.24.156:27017/enviro_agl?authSource=admin&readPreference=primary&appname=MongoDB%20Compass&directConnection=true&ssl=false"
        },
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            },
            "HelloLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/hello"
              }
            },
            "GetUsersLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/getUsers"
              }
            },
            "LoginLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/login"
              }
            },
            "SecretManagerLogGroup": "<REDACTED>",
            "CalculatorLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/calculator"
              }
            },
            "SendMessageLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/lambda-dev-sendMessage"
              }
            },
            "ReceiveMessageLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/lambda-dev-receiveMessage"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "lambda",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/hello:*"
                            },
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/getUsers:*"
                            },
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/login:*"
                            },
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/secretManager:*"
                            },
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/calculator:*"
                            },
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/lambda-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/hello:*:*"
                            },
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/getUsers:*:*"
                            },
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/login:*:*"
                            },
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/secretManager:*:*"
                            },
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/calculator:*:*"
                            },
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/lambda-dev*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "lambda",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              }
            }
          }
        },
        "coreCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              }
            }
          }
        }
      },
      "plugins": [
        "serverless-offline",
        "serverless-dotenv-plugin",
        "serverless-middleware"
      ],
      "functions": {
        "hello": {
          "name": "hello",
          "handler": "src/handlers/handler.hello",
          "events": [
            {
              "http": {
                "path": "/hello",
                "method": "get"
              }
            }
          ],
          "package": {}
        },
        "getUsers": {
          "name": "getUsers",
          "handler": "src/handlers/hr.hrHandler.users",
          "events": [
            {
              "http": {
                "path": "/users",
                "method": "post"
              }
            }
          ],
          "package": {}
        },
        "login": {
          "name": "login",
          "handler": "src/handlers/hr.hrHandler.login",
          "events": [
            {
              "http": {
                "path": "/login",
                "method": "post"
              }
            }
          ],
          "package": {}
        },
        "secretManager": "<REDACTED>",
        "calculator": {
          "name": "calculator",
          "handler": "src/handlers/calculator.calculator",
          "events": [
            {
              "http": {
                "path": "/calculator",
                "method": "post"
              }
            }
          ],
          "package": {}
        },
        "sendMessage": {
          "handler": "src/handlers/queuehandler.sendMessage",
          "events": [
            {
              "http": {
                "path": "/send",
                "method": "post"
              }
            }
          ],
          "name": "lambda-dev-sendMessage",
          "package": {}
        },
        "receiveMessage": {
          "handler": "src/handlers/queuehandler.receiveMessage",
          "events": [
            {
              "sqs": {
                "arn": {
                  "Fn::GetAtt": [
                    "MyQueue",
                    "Arn"
                  ]
                }
              }
            }
          ],
          "name": "lambda-dev-receiveMessage",
          "package": {}
        }
      },
      "resources": {
        "Resources": {
          "MyQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "MyQueue"
            }
          }
        }
      },
      "outputs": {
        "queueUrl": {
          "Description": "URL of the SQS queue",
          "Value": {
            "Ref": "MyQueue"
          }
        }
      }
    },
    "serviceRawFile": "service: lambda\nframeworkVersion: \"4.1.0\"\n\nprovider:\n  name: aws\n  runtime: nodejs18.x\n  memorySize: 2048\n  timeout: 20\n  region: ap-south-1\n  stage: ${opt:stage, 'dev'}\n  httpApi:\n    cors: true\n  environment: \n    # SQS_QUEUE_URL: ${cf:${self:service}-${sls:stage}.queueUrl}  # Comment this out for the initial deployment\n    ENV_VARS_FROM_FILE: ${file(src/config/${self:provider.stage}.json)}\n\nplugins:\n  - serverless-offline\n  - serverless-dotenv-plugin\n  - serverless-middleware\n\nfunctions:\n  hello:\n    name: hello\n    handler: src/handlers/handler.hello\n    events:\n      - http:\n          path: /hello\n          method: get\n\n  getUsers:\n    name: getUsers\n    # middleware:\n    #   - src/handlers/authMiddleware.authenticate\n    handler: src/handlers/hr.hrHandler.users\n    events:\n      - http:\n          path: /users\n          method: post\n\n  login:\n    name: login\n    handler: src/handlers/hr.hrHandler.login\n    events:\n      - http:\n          path: /login\n          method: post\n\n  secretManager:\n    name: secretManager\n    handler: src/handlers/secretManager.configsecretmanager\n    events:\n      - http:\n          path: /get-config-credentials\n          method: get\n\n  calculator:\n    name: calculator\n    handler: src/handlers/calculator.calculator\n    events:\n      - http:\n          path: /calculator\n          method: post\n\n  sendMessage:\n    handler: src/handlers/queuehandler.sendMessage\n    events:\n      - http:\n          path: /send\n          method: post\n\n  receiveMessage:\n    handler: src/handlers/queuehandler.receiveMessage\n    events:\n      - sqs:\n          arn:\n            Fn::GetAtt:\n              - MyQueue\n              - Arn\n\nresources:\n  Resources:\n    MyQueue:\n      Type: AWS::SQS::Queue\n      Properties:\n        QueueName: MyQueue\n\noutputs:\n  queueUrl:\n    Description: URL of the SQS queue\n    Value:\n      Ref: MyQueue\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": {
      "message": "Cannot read file node_modules\\aws-sdk\\apis\\ivs-2020-07-14.examples.json due to: EMFILE: too many open files, open 'D:\\NodeProjects\\lambdaMultiHandler\\node_modules\\aws-sdk\\apis\\ivs-2020-07-14.examples.json'",
      "stack": "ServerlessError2: Cannot read file node_modules\\aws-sdk\\apis\\ivs-2020-07-14.examples.json due to: EMFILE: too many open files, open 'D:\\NodeProjects\\lambdaMultiHandler\\node_modules\\aws-sdk\\apis\\ivs-2020-07-14.examples.json'\n    at file:///C:/Users/AGL/.serverless/releases/4.1.5/package/dist/sf-core.js:813:26739\n    at tryCatcher (file:///C:/Users/AGL/.serverless/releases/4.1.5/package/dist/sf-core.js:394:82107)\n    at Promise2._settlePromiseFromHandler (file:///C:/Users/AGL/.serverless/releases/4.1.5/package/dist/sf-core.js:572:10147)\n    at Promise2._settlePromise (file:///C:/Users/AGL/.serverless/releases/4.1.5/package/dist/sf-core.js:572:11471)\n    at Promise2._settlePromise0 (file:///C:/Users/AGL/.serverless/releases/4.1.5/package/dist/sf-core.js:572:12528)\n    at Promise2._settlePromises (file:///C:/Users/AGL/.serverless/releases/4.1.5/package/dist/sf-core.js:572:14124)\n    at _drainQueueStep (file:///C:/Users/AGL/.serverless/releases/4.1.5/package/dist/sf-core.js:401:583)\n    at _drainQueue (file:///C:/Users/AGL/.serverless/releases/4.1.5/package/dist/sf-core.js:401:479)\n    at Async._drainQueues (file:///C:/Users/AGL/.serverless/releases/4.1.5/package/dist/sf-core.js:401:716)\n    at Async.drainQueues [as _onImmediate] (file:///C:/Users/AGL/.serverless/releases/4.1.5/package/dist/sf-core.js:397:3295)\n    at process.processImmediate (node:internal/timers:476:21)",
      "code": "CANNOT_READ_FILE"
    },
    "params": {},
    "machineId": "e2bf80a54192274dca248942bc99f0f5",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "befb7b33-98ca-4613-bab9-e4e253848e20",
    "orgName": "agglobal360",
    "userId": "Fsq82W7bccZZsmFTDb",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "agglobal360",
    "subscription": null,
    "userEmail": "virendra.badgurjar@adglobal360.com",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "907389275478",
    "versionSf": "4.1.5",
    "serviceProviderAwsCfStackName": "lambda-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:ap-south-1:907389275478:stack/lambda-dev/4eb6f120-21a4-11ef-b260-0a4c09e6d07d",
    "serviceProviderAwsCfStackCreated": "2024-06-03T12:25:05.242Z",
    "serviceProviderAwsCfStackUpdated": "2024-06-06T10:17:28.819Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_ROLLBACK_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "GetUsersLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:ap-south-1:907389275478:function:getUsers:2",
        "Description": "Current Lambda function version",
        "ExportName": "sls-lambda-dev-GetUsersLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "HelloLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:ap-south-1:907389275478:function:lambda-dev-hello:2",
        "Description": "Current Lambda function version",
        "ExportName": "sls-lambda-dev-HelloLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "LoginLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:ap-south-1:907389275478:function:login:2",
        "Description": "Current Lambda function version",
        "ExportName": "sls-lambda-dev-LoginLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://efmb14ks8j.execute-api.ap-south-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-lambda-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "lambda-dev-serverlessdeploymentbucket-wicnqpumd7ys",
        "ExportName": "sls-lambda-dev-ServerlessDeploymentBucketName"
      }
    ]
  }
}